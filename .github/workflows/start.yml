
name: request changes

on:
  pull_request_review:
    types: [submitted]

jobs:
  submit:
    if: github.event.review.state == 'commented'&& startsWith(github.event.review.body, '/start')
    runs-on: ubuntu-latest
    container: gcr.io/cloud-builders/gsutil

    steps:

    - name: Parse message
      id: parse-script
      shell: bash
      run: |
        echo "The body is: ${{ github.event.review.body }}"
        echo "The check is ${{ startsWith(github.event.review.body, '/start') }} "
        BUILD_URL="${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY}/actions/runs/${GITHUB_RUN_ID}"
        echo "${BUILD_ID}"
        echo "::set-output name=modified_message::$(sed "s|/start|[/start](${BUILD_URL})|" <<< '${{ github.event.review.body }}')"

    - name: Update comment with the link to this build
      uses: peter-evans/create-or-update-comment@v1
      with:
        comment-id: ${{ github.event.comment.id }}
        body: ${{ steps.parse-script.outputs.modified_message }}
        issue-number: ${{ github.event.pull_request.number }}
        reactions: rocket
        edit-mode: replace

    - name: Fire the coment
      uses: actions/github-script@v3
      with:
        script: |
          github.issues.createComment({
            issue_number: ${{ github.event.pull_request.number }},
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: 'Training logs are [here](${{ steps.parse-script.outputs.modified_message }}). ðŸš€'
          })
    
    - name: "Get the source code"
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
        ref: ${{ github.event.pull_request.head.ref }}

    - name: "Check the source code version"
      run: |
        echo "This is the review body ${{ github.event.review.body }}"
        echo "This is the review id ${{ github.event.review.id }}"
        cat README.md

    - name: "Check basic git commands"
      run: |
        git branch --show-current
        git rev-parse --short HEAD
